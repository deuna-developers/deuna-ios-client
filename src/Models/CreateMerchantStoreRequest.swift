//
// CreateMerchantStoreRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/**  */
public struct CreateMerchantStoreRequest: Codable, JSONEncodable, Hashable {

    static let addressRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    static let latitudeRule = NumericRule<Int>(minimum: nil, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let longitudeRule = NumericRule<Int>(minimum: nil, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let nameRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    public var address: String?
    public var latitude: Int?
    public var longitude: Int?
    public var name: String?

    public init(address: String? = nil, latitude: Int? = nil, longitude: Int? = nil, name: String? = nil) {
        self.address = address
        self.latitude = latitude
        self.longitude = longitude
        self.name = name
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case address
        case latitude
        case longitude
        case name
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(address, forKey: .address)
        try container.encodeIfPresent(latitude, forKey: .latitude)
        try container.encodeIfPresent(longitude, forKey: .longitude)
        try container.encodeIfPresent(name, forKey: .name)
    }
}

