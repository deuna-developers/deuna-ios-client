//
// OrderTokenRequestOrderShippingOptionsDetails.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** El detalle del método de envío  */
public struct OrderTokenRequestOrderShippingOptionsDetails: Codable, JSONEncodable, Hashable {

    static let addressRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    static let storeNameRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    public var additionalDetails: OrderTokenRequestOrderShippingOptionsDetailsAdditionalDetails?
    /** Dirección de la tienda */
    public var address: String
    public var addressCoordinates: OrderTokenRequestOrderShippingOptionsDetailsAddressCoordinates
    public var contact: OrderTokenRequestOrderShippingOptionsDetailsContact?
    /** Nombre de la tienda */
    public var storeName: String

    public init(additionalDetails: OrderTokenRequestOrderShippingOptionsDetailsAdditionalDetails? = nil, address: String, addressCoordinates: OrderTokenRequestOrderShippingOptionsDetailsAddressCoordinates, contact: OrderTokenRequestOrderShippingOptionsDetailsContact? = nil, storeName: String) {
        self.additionalDetails = additionalDetails
        self.address = address
        self.addressCoordinates = addressCoordinates
        self.contact = contact
        self.storeName = storeName
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case additionalDetails = "additional_details"
        case address
        case addressCoordinates = "address_coordinates"
        case contact
        case storeName = "store_name"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(additionalDetails, forKey: .additionalDetails)
        try container.encode(address, forKey: .address)
        try container.encode(addressCoordinates, forKey: .addressCoordinates)
        try container.encodeIfPresent(contact, forKey: .contact)
        try container.encode(storeName, forKey: .storeName)
    }
}

