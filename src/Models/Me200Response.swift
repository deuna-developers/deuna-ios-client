//
// Me200Response.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/**  */
public struct Me200Response: Codable, JSONEncodable, Hashable {

    static let emailRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    public var email: String?
    public var id: Int?
    public var merchantId: String?
    public var merchantName: String?
    public var modules: [String]?

    public init(email: String? = nil, id: Int? = nil, merchantId: String? = nil, merchantName: String? = nil, modules: [String]? = nil) {
        self.email = email
        self.id = id
        self.merchantId = merchantId
        self.merchantName = merchantName
        self.modules = modules
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case email
        case id
        case merchantId = "merchant_id"
        case merchantName = "merchant_name"
        case modules
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(email, forKey: .email)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(merchantId, forKey: .merchantId)
        try container.encodeIfPresent(merchantName, forKey: .merchantName)
        try container.encodeIfPresent(modules, forKey: .modules)
    }
}

