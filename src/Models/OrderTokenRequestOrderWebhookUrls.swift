//
// OrderTokenRequestOrderWebhookUrls.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Endpoints de integración con el comercio, si ya los tienes configurados en el admin no es necesario enviarlos */
public struct OrderTokenRequestOrderWebhookUrls: Codable, JSONEncodable, Hashable {

    /** Endpoint para aplicar un cupón */
    public var applyCoupon: String?
    /** Endpoint para obtener todos los métodos de envío para la orden */
    public var getShippingMethods: String?
    /** Endpoint para notificar una orden en el comercio */
    public var notifyOrder: String?
    /** Endpoint para remover un cupón */
    public var removeCoupon: String?
    /** Endpoint para obtener la tarifa de envío de la orden */
    public var shippingRate: String?
    /** Endpoint para actualizar el método de envío de la orden */
    public var updateShippingMethod: String?

    public init(applyCoupon: String? = nil, getShippingMethods: String? = nil, notifyOrder: String? = nil, removeCoupon: String? = nil, shippingRate: String? = nil, updateShippingMethod: String? = nil) {
        self.applyCoupon = applyCoupon
        self.getShippingMethods = getShippingMethods
        self.notifyOrder = notifyOrder
        self.removeCoupon = removeCoupon
        self.shippingRate = shippingRate
        self.updateShippingMethod = updateShippingMethod
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case applyCoupon = "apply_coupon"
        case getShippingMethods = "get_shipping_methods"
        case notifyOrder = "notify_order"
        case removeCoupon = "remove_coupon"
        case shippingRate = "shipping_rate"
        case updateShippingMethod = "update_shipping_method"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(applyCoupon, forKey: .applyCoupon)
        try container.encodeIfPresent(getShippingMethods, forKey: .getShippingMethods)
        try container.encodeIfPresent(notifyOrder, forKey: .notifyOrder)
        try container.encodeIfPresent(removeCoupon, forKey: .removeCoupon)
        try container.encodeIfPresent(shippingRate, forKey: .shippingRate)
        try container.encodeIfPresent(updateShippingMethod, forKey: .updateShippingMethod)
    }
}

